'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

var _httpStatusCodes = require('http-status-codes');

var _httpStatusCodes2 = _interopRequireDefault(_httpStatusCodes);

var _invoice = require('../models/invoice.model');

var _invoice2 = _interopRequireDefault(_invoice);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// validator
exports.default = {
  findAll: function findAll(req, res, next) {
    _invoice2.default.find().then(function (data) {
      return res.json(data);
    }).catch(function (err) {
      return res.status(_httpStatusCodes2.default.INTERNAL_SERVER_ERROR).json(err);
    });
  },
  create: function create(req, res) {
    var schema = _joi2.default.object().keys({
      item: _joi2.default.string().required(),
      date: _joi2.default.date().optional(),
      qty: _joi2.default.number().integer().required()
    });

    var _Joi$validate = _joi2.default.validate(req.body, schema),
        error = _Joi$validate.error,
        value = _Joi$validate.value;

    if (error && error.details) {
      return res.status(_httpStatusCodes2.default.BAD_REQUEST).json(error);
    }

    _invoice2.default.create(value).then(function (data) {
      return res.json(data);
    }).catch(function (err) {
      return res.status(_httpStatusCodes2.default.INTERNAL_SERVER_ERROR).json(err);
    });
  },
  findOne: function findOne(req, res) {
    var id = req.params.id;

    _invoice2.default.findById(id).then(function (data) {
      if (!data) {
        return res.status(_httpStatusCodes2.default.NOT_FOUND).json({ err: 'Could not find any invoice' });
      }
      return res.json(data);
    }).catch(function (err) {
      return res.status(_httpStatusCodes2.default.INTERNAL_SERVER_ERROR).json(err);
    });
  },
  delete: function _delete(req, res) {
    var id = req.params.id;

    _invoice2.default.findByIdAndRemove(id).then(function (data) {
      if (!data) {
        return res.status(_httpStatusCodes2.default.NOT_FOUND).json({ err: 'Could not delete any invoice' });
      }
      return res.json(data);
    }).catch(function (err) {
      return res.status(_httpStatusCodes2.default.INTERNAL_SERVER_ERROR).json(err);
    });
  },
  update: function update(req, res) {
    var id = req.params.id;

    var schema = _joi2.default.object().keys({
      item: _joi2.default.string().optional(),
      date: _joi2.default.date().optional(),
      qty: _joi2.default.number().integer().optional()
    });

    var _Joi$validate2 = _joi2.default.validate(req.body, schema),
        error = _Joi$validate2.error,
        value = _Joi$validate2.value;

    if (error && error.details) {
      return res.status(_httpStatusCodes2.default.BAD_REQUEST).json(error);
    }
    _invoice2.default.findOneAndUpdate({ _id: id }, value, { new: true }).then(function (data) {
      return res.json(data);
    }).catch(function (err) {
      return res.status(_httpStatusCodes2.default.INTERNAL_SERVER_ERROR).json(err);
    });
  }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9hcGkvY29udHJvbGxlci9pbnZvaWNlLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiZmluZEFsbCIsInJlcSIsInJlcyIsIm5leHQiLCJJbnZvaWNlIiwiZmluZCIsInRoZW4iLCJqc29uIiwiZGF0YSIsImNhdGNoIiwic3RhdHVzIiwiSHR0cFN0YXR1cyIsIklOVEVSTkFMX1NFUlZFUl9FUlJPUiIsImVyciIsImNyZWF0ZSIsInNjaGVtYSIsIkpvaSIsIm9iamVjdCIsImtleXMiLCJpdGVtIiwic3RyaW5nIiwicmVxdWlyZWQiLCJkYXRlIiwib3B0aW9uYWwiLCJxdHkiLCJudW1iZXIiLCJpbnRlZ2VyIiwidmFsaWRhdGUiLCJib2R5IiwiZXJyb3IiLCJ2YWx1ZSIsImRldGFpbHMiLCJCQURfUkVRVUVTVCIsImZpbmRPbmUiLCJpZCIsInBhcmFtcyIsImZpbmRCeUlkIiwiTk9UX0ZPVU5EIiwiZGVsZXRlIiwiZmluZEJ5SWRBbmRSZW1vdmUiLCJ1cGRhdGUiLCJmaW5kT25lQW5kVXBkYXRlIiwiX2lkIiwibmV3Il0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTs7OztBQUNBOzs7O0FBQ0E7Ozs7OztBQUZ1QjtrQkFJUjtBQUViQSxTQUZhLG1CQUVMQyxHQUZLLEVBRUFDLEdBRkEsRUFFS0MsSUFGTCxFQUVXO0FBQ3BCQyxzQkFBUUMsSUFBUixHQUNDQyxJQURELENBQ007QUFBQSxhQUFRSixJQUFJSyxJQUFKLENBQVNDLElBQVQsQ0FBUjtBQUFBLEtBRE4sRUFFQ0MsS0FGRCxDQUVPO0FBQUEsYUFBT1AsSUFBSVEsTUFBSixDQUFXQywwQkFBV0MscUJBQXRCLEVBQTZDTCxJQUE3QyxDQUFrRE0sR0FBbEQsQ0FBUDtBQUFBLEtBRlA7QUFHSCxHQU5ZO0FBUWJDLFFBUmEsa0JBUU5iLEdBUk0sRUFRREMsR0FSQyxFQVFJO0FBQ1gsUUFBTWEsU0FBU0MsY0FBSUMsTUFBSixHQUFhQyxJQUFiLENBQWtCO0FBQ2pDQyxZQUFNSCxjQUFJSSxN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U1BBLEtBVE87QUFBQSxRQVNBQyxLQVRBLGtCQVNBQSxLQVRBOztBQVVmLFFBQUlELFNBQVNBLE1BQU1FLE9BQW5CLEVBQTRCO0FBQzFCLGFBQU83QixJQUFJUSxNQUFKLENBQVdDLDBCQUFXcUIsV0FBdEIsRUFBbUN6QixJQUFuQyxDQUF3Q3NCLEtBQXhDLENBQVA7QUFDRDtBQUNEekIsc0JBQVFxQyxnQkFBUixDQUF5QixFQUFFQyxLQUFLUixFQUFQLEVBQXpCLEVBQXNDSixLQUF0QyxFQUE2QyxFQUFFYSxLQUFLLElBQVAsRUFBN0MsRUFDR3JDLElBREgsQ0FDUTtBQUFBLGFBQVFKLElBQUlLLElBQUosQ0FBU0MsSUFBVCxDQUFSO0FBQUEsS0FEUixFQUVHQyxLQUZILENBRVM7QUFBQSxhQUFPUCxJQUFJUSxNQUFKLENBQVdDLDBCQUFXQyxxQkFBdEIsRUFBNkNMLElBQTdDLENBQWtETSxHQUFsRCxDQUFQO0FBQUEsS0FGVDtBQUdEO0FBbkVRLEMiLCJmaWxlIjoiaW52b2ljZS5jb250cm9sbGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEpvaSBmcm9tICdqb2knOyAvLyB2YWxpZGF0b3JcclxuaW1wb3J0IEh0dHBTdGF0dXMgZnJvbSAnaHR0cC1zdGF0dXMtY29kZXMnO1xyXG5pbXBvcnQgSW52b2ljZSBmcm9tICcuLi9tb2RlbHMvaW52b2ljZS5tb2RlbCc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcblxyXG4gIGZpbmRBbGwocmVxLCByZXMsIG5leHQpIHtcclxuICAgICAgSW52b2ljZS5maW5kKClcclxuICAgICAgLnRoZW4oZGF0YSA9PiByZXMuanNvbihkYXRhKSlcclxuICAgICAgLmNhdGNoKGVyciA9PiByZXMuc3RhdHVzKEh0dHBTdGF0dXMuSU5URVJOQUxfU0VSVkVSX0VSUk9SKS5qc29uKGVycikpO1xyXG4gIH0sXHJcblxyXG4gIGNyZWF0ZShyZXEsIHJlcykge1xyXG4gICAgICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3QoKS5rZXlzKHtcclxuICAgICAgICBpdGVtOiBKb2kuc3RyaW5nKCkucmVxdWlyZWQoKSxcclxuICAgICAgICBkYXRlOiBKb2kuZGF0ZSgpLm9wdGlvbmFsKCksXHJcbiAgICAgICAgcXR5OiBKb2kubnVtYmVyKClcclxuICAgICAgICAgIC5pbnRlZ2VyKClcclxuICAgICAgICAgIC5yZXF1aXJlZCgpLFxyXG4gICAgICAgIH0pO1xyXG4gIGNvbnN0IHsgZXJyb3IsIHZhbHVlIH0gPSBKb2kudmFsaWRhdGUocmVxLmJvZHksIHNjaGVtYSk7XHJcblxyXG4gICAgICAgIGlmIChlcnJvciAmJiBlcnJvci5kZXRhaWxzKSB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyhIdHRwU3RhdHVzLkJBRF9SRVFVRVNUKS5qc29uKGVycm9yKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIEludm9pY2UuY3JlYXRlKHZhbHVlKVxyXG4gICAgICAgLnRoZW4oZGF0YSA9PiByZXMuanNvbihkYXRhKSlcclxuICAgICAgIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyhIdHRwU3RhdHVzLklOVEVSTkFMX1NFUlZFUl9FUlJPUikuanNvbihlcnIpKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIGZpbmRPbmUocmVxLCByZXMpIHtcclxuICAgICAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgICAgIEludm9pY2UuZmluZEJ5SWQoaWQpXHJcbiAgICAgICAgICAudGhlbihkYXRhID0+IHtcclxuICAgICAgICAgICAgaWYgKCFkYXRhKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5OT1RfRk9VTkQpLmpzb24oeyBlcnI6ICdDb3VsZCBub3QgZmluZCBhbnkgaW52b2ljZScgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5qc29uKGRhdGEpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5jYXRjaChlcnIgPT4gcmVzLnN0YXR1cyhIdHRwU3RhdHVzLklOVEVSTkFMX1NFUlZFUl9FUlJPUikuanNvbihlcnIpKTtcclxuICAgICAgfSxcclxuXHJcbiAgICAgIGRlbGV0ZShyZXEsIHJlcykge1xyXG4gICAgICAgIGNvbnN0IHsgaWQgfSA9IHJlcS5wYXJhbXM7XHJcbiAgICAgICAgSW52b2ljZS5maW5kQnlJZEFuZFJlbW92ZShpZClcclxuICAgICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyhIdHRwU3RhdHVzLk5PVF9GT1VORCkuanNvbih7IGVycjogJ0NvdWxkIG5vdCBkZWxldGUgYW55IGludm9pY2UnIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuanNvbihkYXRhKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IpLmpzb24oZXJyKSk7XHJcbiAgICAgIH0sXHJcblxyXG4gICAgICB1cGRhdGUocmVxLCByZXMpIHtcclxuICAgICAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgICAgIGNvbnN0IHNjaGVtYSA9IEpvaS5vYmplY3QoKS5rZXlzKHtcclxuICAgICAgICAgICAgICBpdGVtOiBKb2kuc3RyaW5nKCkub3B0aW9uYWwoKSxcclxuICAgICAgICAgICAgICBkYXRlOiBKb2kuZGF0ZSgpLm9wdGlvbmFsKCksXHJcbiAgICAgICAgICAgICAgcXR5OiBKb2kubnVtYmVyKClcclxuICAgICAgICAgICAgICAgIC5pbnRlZ2VyKClcclxuICAgICAgICAgICAgICAgIC5vcHRpb25hbCgpLFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICBjb25zdCB7IGVycm9yLCB2YWx1ZSB9ID0gSm9pLnZhbGlkYXRlKHJlcS5ib2R5LCBzY2hlbWEpO1xyXG4gICAgICAgIGlmIChlcnJvciAmJiBlcnJvci5kZXRhaWxzKSB7XHJcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyhIdHRwU3RhdHVzLkJBRF9SRVFVRVNUKS5qc29uKGVycm9yKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgSW52b2ljZS5maW5kT25lQW5kVXBkYXRlKHsgX2lkOiBpZCB9LCB2YWx1ZSwgeyBuZXc6IHRydWUgfSlcclxuICAgICAgICAgIC50aGVuKGRhdGEgPT4gcmVzLmpzb24oZGF0YSkpXHJcbiAgICAgICAgICAuY2F0Y2goZXJyID0+IHJlcy5zdGF0dXMoSHR0cFN0YXR1cy5JTlRFUk5BTF9TRVJWRVJfRVJST1IpLmpzb24oZXJyKSk7XHJcbiAgICAgIH0sXHJcblxyXG59XHJcblxyXG4iXX0=